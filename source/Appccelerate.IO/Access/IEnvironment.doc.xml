<?xml version="1.0" encoding="utf-8" ?>
<doc>
  <members>
    <member name="T:System.Environment">
      <summary>Provides information about, and means to manipulate, the current environment and platform. This class cannot be inherited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.CommandLine">
      <summary>Gets the command line for this process.</summary>
      <returns>A string containing command-line arguments.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="Path" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.CurrentDirectory">
      <summary>Gets or sets the fully qualified path of the current working directory.</summary>
      <returns>A string containing a directory path. </returns>
      <exception cref="T:System.ArgumentException">Attempted to set to an empty string (""). </exception>
      <exception cref="T:System.ArgumentNullException">Attempted to set to null. </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">Attempted to set a local path that cannot be found. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the appropriate permission. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.Exit(System.Int32)">
      <summary>Terminates this process and gives the underlying operating system the specified exit code.</summary>
      <param name="exitCode">Exit code to be given to the operating system. </param>
      <exception cref="T:System.Security.SecurityException">The caller does not have sufficient security permission to perform this function. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.ExitCode">
      <summary>Gets or sets the exit code of the process.</summary>
      <returns>A 32-bit signed integer containing the exit code. The default value is zero.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Environment.ExpandEnvironmentVariables(System.String)">
      <summary>Replaces the name of each environment variable embedded in the specified string with the string equivalent of the value of the variable, then returns the resulting string.</summary>
      <returns>A string with each environment variable replaced by its value.</returns>
      <param name="name">A string containing the names of zero or more environment variables. Each environment variable is quoted with the percent sign character (%). </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.
      </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.FailFast(System.String)">
      <summary>Terminates a process but does not execute any active try-finally blocks or finalizers.</summary>
      <param name="message">A message that explains why the process was terminated, or null if no explanation is provided. </param>
    </member>
    <member name="M:System.Environment.FailFast(System.String,System.Exception)">
      <summary>[SECURITY CRITICAL] Immediately terminates a process after writing a message to the Windows Application event log, and then includes the message and exception information in error reporting to Microsoft.</summary>
      <param name="message">A message that explains why the process was terminated, or null if no explanation is provided.</param>
      <param name="exception">An exception that represents the error that caused the termination. This is typically the exception in a catch block.</param>
    </member>
    <member name="M:System.Environment.GetCommandLineArgs">
      <summary>Returns a string array containing the command-line arguments for the current process.</summary>
      <returns>An array of string where each element contains a command-line argument. The first element is the executable file name, and the following zero or more elements contain the remaining command-line arguments.</returns>
      <exception cref="T:System.NotSupportedException">The system does not support command-line arguments. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="Path" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String)">
      <summary>Retrieves the value of an environment variable from the current process.</summary>
      <returns>
        The value of the environment variable specified by <paramref name="variable" />, or null if the environment variable is not found.
      </returns>
      <param name="variable">The name of the environment variable. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.
      </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariable(System.String,System.EnvironmentVariableTarget)">
      <summary>Retrieves the value of an environment variable from the current process or from the Windows operating system registry key for the current user or local machine.</summary>
      <returns>
        The value of the environment variable specified by the <paramref name="variable" /> and <paramref name="target" /> parameters, or null if the environment variable is not found.
      </returns>
      <param name="variable">The name of an environment variable.</param>
      <param name="target">
        One of the <see cref="T:System.EnvironmentVariableTarget" /> values.
      </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.
      </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.User" /> or <see cref="F:System.EnvironmentVariableTarget.Machine" /> and the current operating system is Windows 95, Windows 98, or Windows Me.
      </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> is not a valid <see cref="T:System.EnvironmentVariableTarget" /> value.
      </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables">
      <summary>Retrieves all environment variable names and their values from the current process.</summary>
      <returns>
        An <see cref="T:System.Collections.IDictionary" /> that contains all environment variable names and their values; otherwise, an empty dictionary if no environment variables are found.
      </returns>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation.</exception>
      <exception cref="T:System.OutOfMemoryException">The buffer is out of memory.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetEnvironmentVariables(System.EnvironmentVariableTarget)">
      <summary>Retrieves all environment variable names and their values from the current process, or from the Windows operating system registry key for the current user or local machine.</summary>
      <returns>
        An <see cref="T:System.Collections.IDictionary" /> object that contains all environment variable names and their values from the source specified by the <paramref name="target" /> parameter; otherwise, an empty dictionary if no environment variables are found.
      </returns>
      <param name="target">
        One of the <see cref="T:System.EnvironmentVariableTarget" /> values.
      </param>
      <exception cref="T:System.Security.SecurityException">
        The caller does not have the required permission to perform this operation for the specified value of <paramref name="target" />.
      </exception>
      <exception cref="T:System.NotSupportedException">This method cannot be used on Windows 95 or Windows 98 platforms.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="target" /> contains an illegal value.
      </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder)">
      <summary>Gets the path to the system special folder identified by the specified enumeration.</summary>
      <returns>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, the empty string ("").A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</returns>
      <param name="folder">An enumerated constant that identifies a system special folder. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder" />.
      </exception>
      <exception cref="T:System.PlatformNotSupportedException">The current platform is not supported.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>    
    <member name="M:System.Environment.GetFolderPath(System.Environment.SpecialFolder,System.Environment.SpecialFolderOption)">
      <summary>Gets the path to the system special folder that is identified by the specified enumeration, and uses a specified option for accessing special folders.</summary>
      <returns>The path to the specified system special folder, if that folder physically exists on your computer; otherwise, an empty string ("").A folder will not physically exist if the operating system did not create it, the existing folder was deleted, or the folder is a virtual directory, such as My Computer, which does not correspond to a physical path.</returns>
      <param name="folder">An enumerated constant that identifies a system special folder. </param>
      <param name="option">Specifies options to use for accessing a special folder. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="folder" /> is not a member of <see cref="T:System.Environment.SpecialFolder" />.
      </exception>
      <exception cref="T:System.PlatformNotSupportedException">The current platform is not supported.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>    
    <member name="M:System.Environment.GetLogicalDrives">
      <summary>Returns an array of string containing the names of the logical drives on the current computer.</summary>
      <returns>An array of strings where each element contains the name of a logical drive. For example, if the computer's hard drive is the first logical drive, the first element returned is "C:\".</returns>
      <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permissions. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.HasShutdownStarted">
      <summary>Gets a value indicating whether the common language runtime is shutting down or the current application domain is unloading.</summary>
      <returns>
        true if the common language runtime is shutting down or the current <see cref="T:System.AppDomain" /> is unloading; otherwise, false.The current application domain is the <see cref="T:System.AppDomain" /> that contains the object that is calling <see cref="P:System.Environment.HasShutdownStarted" />.
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.Is64BitOperatingSystem">
      <summary>Determines whether the current operating system is a 64-bit operating system.</summary>
      <returns>
        true if the operating system is 64-bit; otherwise, false.
      </returns>
      <filterpriority>1</filterpriority>
    </member>    
    <member name="P:System.Environment.Is64BitProcess">
      <summary>Determines whether the current process is a 64-bit process.</summary>
      <returns>
        true if the process is 64-bit; otherwise, false.
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.MachineName">
      <summary>Gets the NetBIOS name of this local computer.</summary>
      <returns>A string containing the name of this computer.</returns>
      <exception cref="T:System.InvalidOperationException">The name of this computer cannot be obtained. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.NewLine">
      <summary>Gets the newline string defined for this environment.</summary>
      <returns>A string containing "\r\n" for non-Unix platforms,  or a string containing "\n" for Unix platforms.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.OSVersion">
      <summary>
        Gets an <see cref="T:System.OperatingSystem" /> object that contains the current platform identifier and version number.
      </summary>
      <returns>
        An <see cref="T:System.OperatingSystem" /> object.
      </returns>
      <exception cref="T:System.InvalidOperationException">
        This property was unable to obtain the system version.-or- The obtained platform identifier is not a member of <see cref="T:System.PlatformID" />.
      </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.ProcessorCount">
      <summary>Gets the number of processors on the current machine.</summary>
      <returns>The 32-bit signed integer that specifies the number of processors on the current machine. There is no default.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="NUMBER_OF_PROCESSORS" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String)">
      <summary>Creates, modifies, or deletes an environment variable stored in the current process.</summary>
      <param name="variable">The name of an environment variable. </param>
      <param name="value">
        A value to assign to <paramref name="variable" />.
      </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.
      </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("="). -or-The length of <paramref name="variable" /> or <paramref name="value" /> is greater than or equal to 32,767 characters.-or-An error occurred during the execution of this operation.
      </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Environment.SetEnvironmentVariable(System.String,System.String,System.EnvironmentVariableTarget)">
      <summary>Creates, modifies, or deletes an environment variable stored in the current process or in the Windows operating system registry key reserved for the current user or local machine.</summary>
      <param name="variable">The name of an environment variable.</param>
      <param name="value">
        A value to assign to <paramref name="variable" />.
      </param>
      <param name="target">
        One of the <see cref="T:System.EnvironmentVariableTarget" /> values.
      </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="variable" /> is null.
      </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="variable" /> contains a zero-length string, an initial hexadecimal zero character (0x00), or an equal sign ("="). -or-The length of <paramref name="variable" /> is greater than or equal to 32,767 characters.-or-<paramref name="target" /> is not a member of the <see cref="T:System.EnvironmentVariableTarget" /> enumeration. -or-<paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Machine" /> or <see cref="F:System.EnvironmentVariableTarget.User" /> and the length of <paramref name="variable" /> is greater than or equal to 255.-or-<paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.Process" /> and the length of <paramref name="value" /> is greater than or equal to 32,767 characters. -or-An error occurred during the execution of this operation.
      </exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="target" /> is <see cref="F:System.EnvironmentVariableTarget.User" /> or <see cref="F:System.EnvironmentVariableTarget.Machine" /> and the current operating system is Windows 95, Windows 98, or Windows Me.
      </exception>
      <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to perform this operation. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.StackTrace">
      <summary>Gets current stack trace information.</summary>
      <returns>
        A string containing stack trace information. This value can be <see cref="F:System.String.Empty" />.
      </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The requested stack trace information is out of range. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.SystemDirectory">
      <summary>Gets the fully qualified path of the system directory.</summary>
      <returns>A string containing a directory path.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.SystemPageSize">
      <summary>Gets the amount of memory for an operating system's page file.</summary>
      <returns>The number of bytes in a system page file.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.TickCount">
      <summary>Gets the number of milliseconds elapsed since the system started.</summary>
      <returns>A 32-bit signed integer containing the amount of time in milliseconds that has passed since the last time the computer was started.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.UserDomainName">
      <summary>Gets the network domain name associated with the current user.</summary>
      <returns>The network domain name associated with the current user.</returns>
      <exception cref="T:System.PlatformNotSupportedException">The operating system does not support retrieving the network domain name. </exception>
      <exception cref="T:System.InvalidOperationException">The network domain name cannot be retrieved. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="UserName;UserDomainName" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.UserInteractive">
      <summary>Gets a value indicating whether the current process is running in user interactive mode.</summary>
      <returns>true if the current process is running in user interactive mode; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.UserName">
      <summary>Gets the user name of the person who is currently logged on to the Windows operating system.</summary>
      <returns>The user name of the person who is logged on to Windows.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="UserName" />
      </PermissionSet>
    </member>
    <member name="P:System.Environment.Version">
      <summary>
        Gets a <see cref="T:System.Version" /> object that describes the major, minor, build, and revision numbers of the common language runtime.
      </summary>
      <returns>
        A <see cref="T:System.Version" /> object.
      </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Environment.WorkingSet">
      <summary>Gets the amount of physical memory mapped to the process context.</summary>
      <returns>A 64-bit signed integer containing the number of bytes of physical memory mapped to the process context.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Environment.SpecialFolder">
      <summary>Specifies enumerated constants used to retrieve directory paths to system special folders.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ApplicationData">
      <summary>The directory that serves as a common repository for application-specific data for the current roaming user.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonApplicationData">
      <summary>The directory that serves as a common repository for application-specific data that is used by all users.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.LocalApplicationData">
      <summary>The directory that serves as a common repository for application-specific data that is used by the current, non-roaming user.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Cookies">
      <summary>The directory that serves as a common repository for Internet cookies.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Desktop">
      <summary>The logical Desktop rather than the physical file system location.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Favorites">
      <summary>The directory that serves as a common repository for the user's favorite items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.History">
      <summary>The directory that serves as a common repository for Internet history items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.InternetCache">
      <summary>The directory that serves as a common repository for temporary Internet files.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Programs">
      <summary>The directory that contains the user's program groups.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyComputer">
      <summary>The "My Computer" folder. </summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyMusic">
      <summary>The "My Music" folder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyPictures">
      <summary>The "My Pictures" folder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Recent">
      <summary>The directory that contains the user's most recently used documents.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.SendTo">
      <summary>The directory that contains the Send To menu items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.StartMenu">
      <summary>The directory that contains the Start menu items.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Startup">
      <summary>The directory that corresponds to the user's Startup program group.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.System">
      <summary>The System directory.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Templates">
      <summary>The directory that serves as a common repository for document templates.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.DesktopDirectory">
      <summary>The directory used to physically store file objects on the desktop.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.Personal">
      <summary>The directory that serves as a common repository for documents.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.MyDocuments">
      <summary>The "My Documents" folder.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.ProgramFiles">
      <summary>The program files directory.</summary>
    </member>
    <member name="F:System.Environment.SpecialFolder.CommonProgramFiles">
      <summary>The directory for components that are shared across applications.</summary>
    </member>
  </members>
</doc>